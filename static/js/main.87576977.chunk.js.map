{"version":3,"sources":["alarmring.mp3","Components/ListCom.jsx","Components/AddTasks.jsx","Components/SearchTasks.jsx","Components/ToDo.jsx","index.js"],"names":["ListCom","props","alarmcnt","taskcompleted","event","setObjects","arrayofobj","map","obj","id","completed","count","givendatetime","Date","dateval","replace","toLocaleString","currentdatetime","setInterval","clearInterval","futuretask","Audio","alarm","play","className","onClick","itemval","onremove","AddTasks","htmlFor","type","value","item","placeholder","onChange","itemEvent","autoComplete","name","dateEvent","date","Button","variant","AddItems","SearchTasks","class","searchitem","SearchIEvent","SearchDEvent","searchdate","RadioGroup","aria-label","radioval","selectoneradio","Grid","container","FormControlLabel","control","Radio","color","label","FormControl","component","ToDoList","useState","setItem","setDate","clicktime","setclicktime","setSearchItem","setSearchDate","searcharr","setSearcharr","React","setRadioval","setTime","useEffect","timerID","RemoveItem","rid","console","log","prevValue","filter","itemVal","toLowerCase","includes","dateVal","target","document","getElementById","style","Math","floor","random","val","index","ReactDOM","render"],"mappings":"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","file":"static/js/main.87576977.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/alarmring.fdab3bcb.mp3\";","import React from \"react\";\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport DoneOutlineIcon from '@material-ui/icons/DoneOutline';\r\nimport alarm from \"../alarmring.mp3\"\r\n\r\n\r\nconst ListCom = (props) => {\r\n\r\n   \r\n   \r\n   const taskcompleted = (event) => {\r\n  \r\n    props.setObjects(props.arrayofobj.map((obj)=>{\r\n      if(obj.id === props.id)\r\n      {\r\n        return {\r\n          ...obj,completed: !obj.completed\r\n        }\r\n       \r\n      }\r\n      return obj;\r\n    })\r\n    )      \r\n    \r\n\r\n   }\r\n   \r\n    \r\n  \r\n\r\n  let count = 0 ,alarmcnt;\r\n  const givendatetime = new Date(props.dateval.replace('T', ' ')).toLocaleString('en-GB');\r\n  \r\n  \r\n  if(props.currentdatetime === givendatetime)\r\n   {\r\n    \r\n    \r\n    const playalarm =() =>{\r\n      count++;\r\n      \r\n      if(count === 2)\r\n         {\r\n           \r\n           clearInterval(alarmcnt);\r\n           \r\n         }\r\n      \r\n      props.setObjects(props.arrayofobj.map((obj)=>{\r\n        if(obj.id === props.id)\r\n        {\r\n          return {\r\n            ...obj,futuretask: false\r\n          }\r\n         \r\n        }\r\n        return obj;\r\n      })\r\n      ) \r\n        let alarmsound = new Audio(alarm);\r\n        alarmsound.play();\r\n         \r\n        if(count === 2)\r\n        {\r\n          props.setObjects(props.arrayofobj.map((obj)=>{\r\n            if(obj.id === props.id)\r\n            {\r\n              return {\r\n                ...obj,futuretask: true\r\n              }\r\n             \r\n            }\r\n            return obj;\r\n          })\r\n          ) \r\n        }\r\n     }\r\n     \r\n\r\n     \r\n        alarmcnt = setInterval(  playalarm ,11000);\r\n         \r\n        \r\n   }\r\n  \r\n\r\n  return (\r\n\r\n    <div className=\"todo_style\" >\r\n      \r\n      <span onClick={taskcompleted} className=\"bigbtn\">\r\n      <DoneOutlineIcon className={ props.completed ? \"doneIcon CompletedIcon\" : \"doneIcon\"}/>\r\n      </span>\r\n     \r\n      <li className=\"bigbtn\">\r\n      <div className={props.completed ? \"itemdiv itdiv completetask\" : \r\n                             ( props.futuretask ? \"itemdiv itdiv\" :\"itemdiv itdiv timeup\")}>\r\n        {props.itemval}\r\n        \r\n     </div>\r\n      <div  className={props.completed ? \"timediv itdiv completetask\" :\r\n                     (props.futuretask ? \"timediv itdiv\" :\"timediv itdiv timeup\")}>\r\n        {new Date(props.dateval.replace('T', ' ')).toLocaleString('en-GB')}\r\n      \r\n      </div>\r\n      \r\n      </li>\r\n         \r\n      <span onClick={() => {props.onremove(props.id)}} className=\"bigbtn\">    \r\n        <ClearIcon  className=\"deleteIcon \" />  \r\n      </span>\r\n\r\n      <li className=\"small_list\">\r\n      <div >\r\n          \r\n          <span onClick={taskcompleted}>\r\n          <DoneOutlineIcon className={ props.completed ? \"doneIcon CompletedIcon\" : \"doneIcon\"}/>\r\n          </span>\r\n         <div className={props.completed ? \"small_checkitem itdiv completetask\" : \r\n                             ( props.futuretask ? \"small_checkitem itdiv\" :\"small_checkitem itdiv timeup\")}>\r\n          {props.itemval}\r\n        \r\n         </div>\r\n         \r\n      </div>\r\n      <div >\r\n          \r\n            <span onClick={() => {props.onremove(props.id)}}>    \r\n               <ClearIcon  className=\"deleteIcon\" />  \r\n            </span>\r\n\r\n          <div  className={props.completed ? \"small_crosstime itdiv completetask\" :\r\n                     (props.futuretask ? \"small_crosstime itdiv\" :\"small_crosstime itdiv timeup\")}>\r\n          {new Date(props.dateval.replace('T', ' ')).toLocaleString('en-GB')}\r\n      \r\n           </div>\r\n                 \r\n      </div>\r\n      <hr/>\r\n      </li>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default ListCom;","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nconst AddTasks = (props) =>{\r\n    return(\r\n    <>\r\n       \r\n\r\n<h3>Give me your Tasks ! I'll Remember Them</h3>\r\n\r\n<br />\r\n\r\n<div>\r\n<label  className=\"labeltext\" htmlFor=\"additem\">Enter Task :</label>\r\n<input\r\n  className=\"additem\"\r\n  type=\"text\"\r\n  value={props.item}\r\n  placeholder=\"Add a Task\"\r\n  onChange={props.itemEvent}\r\n  id=\"additem\"\r\n  autoComplete=\"off\"\r\n/>\r\n\r\n</div>\r\n\r\n\r\n<div className=\"timeplus\">\r\n <label  className=\"labeltext\" htmlFor=\"taskdatetime\" >Task Date & Time :</label>\r\n <input className=\"datetime\" type=\"datetime-local\" id=\"taskdatetime\" name=\"taskdatetime\" onChange={props.dateEvent}\r\n  value={props.date}  autoComplete=\"off\"/>\r\n \r\n <Button variant=\"contained\" className=\"plusBtn\" onClick={props.AddItems}>\r\n   <AddIcon className=\"plusIcon\" />\r\n</Button>\r\n\r\n</div>\r\n\r\n\r\n    \r\n    \r\n    </>)\r\n}\r\n\r\nexport default  AddTasks; ;","\r\nimport React from \"react\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst SearchTasks = (props) =>{\r\n\r\n    return(\r\n     <>\r\n     <div className=\"searchdiv \">\r\n             \r\n             <span class=\"searchitimediv\">\r\n              <SearchIcon className=\"searchIcon\" />\r\n              \r\n            <input\r\n            className=\"searchitem\"\r\n            type=\"text\"\r\n            value={props.searchitem}\r\n            placeholder=\"Search Task...\"\r\n            onChange={props.SearchIEvent}\r\n            id=\"searchitem\"\r\n            autoComplete=\"off\"\r\n          />\r\n          </span>\r\n          <span class=\"searchitimediv\">\r\n           <SearchIcon className=\"searchIcon\" />\r\n              <input className=\"searchdatetime\" type=\"date\" \r\n              id=\"searchdatetime\" name=\"taskdatetime\" onChange={props.SearchDEvent}\r\n               value={props.searchdate}  autoComplete=\"off\"/>\r\n          </span>\r\n     </div>\r\n     <div className=\"radiodiv big_visible\">\r\n     <RadioGroup aria-label=\"tasktypes\" className=\"radiobtns big_visible\" name=\"tasktypes\" \r\n               value={props.radioval} onChange={props.selectoneradio}>\r\n        <Grid container>\r\n          <Grid item>\r\n        \r\n        <FormControlLabel className=\"radiooption\" value=\"All\" control={<Radio className=\"radio \" color=\"secondary\" />} label=\"All\"  />       \r\n        </Grid>\r\n        <Grid item>\r\n        <FormControlLabel className=\"radiooption\" value=\"Completed\" control={<Radio className=\"radio \" color=\"secondary\"/>} \r\n        label=\"Completed\" />\r\n        </Grid>\r\n        <Grid item>\r\n        <FormControlLabel className=\"radiooption\" value=\"UnCompleted\" control={<Radio className=\"radio \" color=\"secondary\"/>} label=\"UnCompleted\" /> \r\n        </Grid>\r\n         </Grid> \r\n      </RadioGroup>\r\n      </div>\r\n      <div className=\"small_visible\">\r\n      <FormControl component=\"fieldset\" >\r\n      \r\n      <RadioGroup aria-label=\"tasktypes\" name=\"tasktypes\" className=\"radiobtns\" value={props.radioval} onChange={props.selectoneradio}>\r\n        <FormControlLabel value=\"All\" className=\"radiooption ml\" control={<Radio className=\"radio\"/>} label=\"All\" />\r\n        <FormControlLabel value=\"Completed\" className=\"radiooption ml\" control={<Radio className=\"radio\"/>} label=\"Completed\" />\r\n        <FormControlLabel value=\"UnCompleted\" className=\"radiooption \" control={<Radio className=\"radio\"/>} label=\"UnCompleted\" />\r\n        \r\n      </RadioGroup>\r\n    </FormControl>\r\n    </div>\r\n     \r\n     </>)\r\n}     \r\n\r\nexport default SearchTasks ;","\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ListObj from \"./ListCom\";\r\nimport AddTasks from \"./AddTasks\";\r\nimport SearchTasks from \"./SearchTasks\";\r\n\r\n\r\nconst ToDoList = () => {\r\n\r\n  const [item, setItem] = useState(\"\");\r\n  const [date, setDate] = useState(\"\");\r\n  const [arrayofobj, setObjects] = useState([]);\r\n  const [clicktime ,setclicktime] = useState(\"\");\r\n  const [searchitem,setSearchItem] = useState(\"\");\r\n  const [searchdate,setSearchDate] = useState(\"\");\r\n  const [searcharr,setSearcharr] = useState([]);\r\n  const [radioval, setRadioval] = React.useState('All');\r\n  const [currentdatetime,setTime] = useState(\"\");\r\n\r\n  \r\n  useEffect(() => {\r\n    \r\n    var timerID = setInterval( () => tick(), 1000 );\r\n    return function cleanup() {\r\n        clearInterval(timerID);\r\n      };\r\n   });\r\n  \r\n     function tick() {\r\n      setTime(new Date().toLocaleString('en-GB'));\r\n     }\r\n \r\n   \r\n\r\n  const itemEvent = (event) => {\r\n    setItem(event.target.value);\r\n  };\r\n\r\n  const dateEvent = (event) => {\r\n      setDate(event.target.value);\r\n      document.getElementById('taskdatetime').style.color = 'white';\r\n  }\r\n\r\n  const SearchIEvent = (event) => {\r\n    setSearchItem(event.target.value);\r\n    \r\n  }\r\n   \r\n  \r\n\r\n  const SearchDEvent = (event) => {\r\n    setSearchDate(event.target.value);\r\n    document.getElementById('searchdatetime').style.color = 'white';\r\n  }\r\n\r\nconst selectoneradio = (event) =>{\r\n    setRadioval(event.target.value);\r\n    \r\n  }\r\n \r\n\r\n         \r\n\r\n  const RemoveItem = (rid) =>{\r\n    console.log(rid);\r\n    \r\n    \r\n     \r\n    setObjects((prevValue) => {\r\n      return prevValue.filter((obj) => {\r\n            return obj.id !== rid;\r\n      });\r\n    });\r\n     \r\n  }\r\n  \r\n  const AddItems = () => {\r\n\r\n    setclicktime(new Date());\r\n    \r\n\r\n    if(item && date)\r\n       {\r\n        \r\n\r\n        setObjects((prevValue) => {\r\n          return [...prevValue, {itemVal:item,dateVal:date,completed:false,futuretask:true,id:Math.floor(Math.random()*10000)}];\r\n        })\r\n\r\n        \r\n\r\n       }\r\n        \r\n       setItem(\"\");\r\n    \r\n    \r\n      setDate(\"\");\r\n\r\n\r\n  }\r\n\r\n\r\n    useEffect(()=>{\r\n    \r\n      switch(radioval){\r\n      \r\n        case 'Completed':\r\n               setSearcharr(arrayofobj.filter( (obj) =>{return obj.completed === true && obj.itemVal.toLowerCase().includes(searchitem.toLowerCase())\r\n                && obj.dateVal.toLowerCase().includes(searchdate.toLowerCase())}))\r\n               break;\r\n        case 'UnCompleted':\r\n               setSearcharr(arrayofobj.filter( (obj) =>{return obj.completed === false && obj.itemVal.toLowerCase().includes(searchitem.toLowerCase())\r\n                && obj.dateVal.toLowerCase().includes(searchdate.toLowerCase())}))\r\n               break;\r\n        default:\r\n               setSearcharr(arrayofobj.filter( (obj) =>{return obj.itemVal.toLowerCase().includes(searchitem.toLowerCase())\r\n                && obj.dateVal.toLowerCase().includes(searchdate.toLowerCase())}));\r\n               break;\r\n       }\r\n      \r\n     }\r\n  ,[radioval,arrayofobj,searchitem,searchdate]);\r\n  \r\n\r\n  return (\r\n    <>\r\n      <div className=\"main_div\">\r\n        <div className=\"center_div\">\r\n\r\n          \r\n          <AddTasks item={item} itemEvent={itemEvent} dateEvent={dateEvent} date={date} AddItems={AddItems}/>\r\n          \r\n          <SearchTasks searchitem={searchitem} SearchIEvent={SearchIEvent} \r\n          searchdate={searchdate} SearchDEvent={SearchDEvent} radioval={radioval}\r\n          selectoneradio={selectoneradio}\r\n          />\r\n\r\n\r\n          <ol>\r\n                 \r\n            { \r\n              \r\n              searcharr.map((val, index) => {\r\n              \r\n              return <ListObj key={index} id={val.id} \r\n              itemval={val.itemVal} \r\n              dateval={val.dateVal}  \r\n              onremove={RemoveItem}\r\n              clicktime={clicktime}\r\n              completed={val.completed}\r\n              futuretask={val.futuretask}\r\n              arrayofobj = {arrayofobj}\r\n              setObjects={setObjects}\r\n              currentdatetime={currentdatetime}\r\n              /> \r\n              })\r\n              \r\n            \r\n            } \r\n             \r\n\r\n\r\n          </ol>\r\n          <br />\r\n          \r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ToDoList;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/ToDo';\nimport  \"./index.css\";\n\n\nReactDOM.render(\n    \n    <App/>\n    ,\n    document.getElementById('root')\n);"],"sourceRoot":""}